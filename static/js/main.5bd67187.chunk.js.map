{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","input","setInput","isMovieFound","setIsMovieFound","isMovieLoading","setIsMovieLoading","initialPreview","moviePreview","setMoviePreview","visiblePreview","htmlFor","type","id","placeholder","value","onChange","event","currentTarget","disabled","onClick","query","preventDefault","fetch","then","res","json","catch","Response","Error","newMovie","image","Title","Plot","imdbID","Poster","includes","finally","find","movieOnFile","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bd67187.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  setMovies: Dispatch<SetStateAction<Movie[]>>,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [input, setInput] = useState('');\n  const [isMovieFound, setIsMovieFound] = useState<null | boolean>(null);\n  const [isMovieLoading, setIsMovieLoading] = useState(false);\n\n  const initialPreview = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [moviePreview, setMoviePreview] = useState(initialPreview);\n\n  const visiblePreview = moviePreview.imdbId;\n\n  const handleMovieSearch = (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n\n    setIsMovieLoading(true);\n\n    getMovie(input)\n      .then(newMovie => {\n        if ('imdbID' in newMovie) {\n          const {\n            Title,\n            Plot,\n            imdbID,\n            Poster,\n          } = newMovie;\n\n          let image;\n\n          if (!Poster.includes('https://')) {\n            image = (\n              'https://via.placeholder.com/360x270.png?text=no%20preview'\n            );\n          } else {\n            image = Poster;\n          }\n\n          setMoviePreview(\n            {\n              title: Title,\n              description: Plot,\n              imgUrl: image,\n              imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n              imdbId: imdbID,\n            },\n          );\n        } else {\n          setIsMovieFound(false);\n        }\n      })\n      .finally(() => setIsMovieLoading(false));\n  };\n\n  const handleAddToList = () => {\n    const duplicateMovie = movies.find(movieOnFile => (\n      movieOnFile.imdbId === visiblePreview\n    ));\n\n    if (duplicateMovie || !visiblePreview) {\n      setMoviePreview(initialPreview);\n\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      moviePreview,\n    ]);\n\n    setMoviePreview(initialPreview);\n    setInput('');\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.currentTarget.value);\n    setIsMovieFound(true);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={input}\n              onChange={handleInput}\n            />\n          </div>\n\n          {isMovieFound === false && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={isMovieLoading\n                ? 'button is-light is-loading'\n                : 'button is-light'}\n              disabled={!input}\n              onClick={handleMovieSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {(isMovieFound && visiblePreview) && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          ) }\n        </div>\n      </form>\n\n      {visiblePreview && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          {visiblePreview && <MovieCard movie={moviePreview} />}\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=37e575c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}